import React, { useState } from 'react';
import 'bootstrap/dist/css/bootstrap.min.css';
import { ToastContainer, toast } from 'react-toastify';
import AddUser from './components/AddUser';
import EditUser from './components/EditUser';
import UserList from './components/UserList';
import './App.css';

function App() {
  const [users, setUsers] = useState([]);
  const [editIndex, setEditIndex] = useState(null);
  const [darkMode, setDarkMode] = useState(false);

  const addUser = (user) => {
    setUsers([...users, user]);
    toast.success('User added successfully!');
  };

  const deleteUser = (index) => {
    setUsers(users.filter((_, i) => i !== index));
    toast.error('User deleted!');
  };

  const editUser = (index) => {
    setEditIndex(index);
  };

  const updateUser = (user) => {
    const updatedUsers = [...users];
    updatedUsers[editIndex] = user;
    setUsers(updatedUsers);
    setEditIndex(null);
    toast.info('User updated successfully!');
  };

  const toggleDarkMode = () => {
    setDarkMode(!darkMode);
  };

  return (
    <div className={darkMode ? 'App dark-mode' : 'App'}>
      <div className="container">
        <button onClick={toggleDarkMode} className="btn btn-secondary mb-3">
          {darkMode ? 'Light Mode' : 'Dark Mode'}
        </button>
        {editIndex !== null ? (
          <EditUser user={users[editIndex]} onUpdate={updateUser} />
        ) : (
          <AddUser onAdd={addUser} />
        )}
        <UserList users={users} onEdit={editUser} onDelete={deleteUser} />
      </div>
      <ToastContainer />
    </div>
  );
}

export default App;

------App. Css.. 

/* App.css */
body {
  background-color: #f8f9fa;
}

.container {
  max-width: 800px;
  margin-top: 50px;
  padding: 20px;
  background-color: #fff;
  border-radius: 10px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

h2 {
  text-align: center;
  margin-bottom: 30px;
  color: #343a40;
}

/* Dark Mode Styles */
.dark-mode {
  background-color: #343a40;
  color: #ffffff;
}

.dark-mode .container {
  background-color: #495057;
  color: #ffffff;
}
/* Hover Effects */
.btn:hover {
  opacity: 0.8;
}

.table-hover tbody tr:hover {
  background-color: #f1f1f1;
}
_______adduser.jsx------

import React, { useState } from 'react';
import { toast } from 'react-toastify';

const AddUser = ({ onAdd }) => {
  const [name, setName] = useState('');
  const [email, setEmail] = useState('');

  const handleSubmit = (e) => {
    e.preventDefault();

    if (!name || !email) {
      toast.error('All fields are required!');
      return;
    }

    if (!/\S+@\S+\.\S+/.test(email)) {
      toast.error('Invalid email format!');
      return;
    }

    onAdd({ name, email });
    setName('');
    setEmail('');
  };

  return (
    <div className="container mt-4">
      <h2>Add User</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label>Name</label>
          <input
            type="text"
            className="form-control"
            placeholder="Enter name"
            value={name}
            onChange={(e) => setName(e.target.value)}
            required
          />
        </div>
        <div className="form-group">
          <label>Email</label>
          <input
            type="email"
            className="form-control"
            placeholder="Enter email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
            required
          />
        </div>

-----------------------------------------------------------------------


/* Base Styles */
body {
  font-family: 'Arial', sans-serif;
  margin: 0;
  padding: 0;
  background-color: #f9f9f9;
  color: #333;
}

.App {
  text-align: center;
  padding: 20px;
  max-width: 800px;
  margin: 0 auto;
}

/* Form Styles */
form {
  margin: 20px 0;
  padding: 30px;
  background-color: #ffffff;
  border-radius: 15px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

input {
  margin-bottom: 15px;
  padding: 12px;
  width: 100%;
  font-size: 18px;
  border: 1px solid #ccc;
  border-radius: 8px;
  transition: all 0.3s ease;
}

input:focus {
  border-color: #007bff;
  box-shadow: 0 0 8px rgba(0, 123, 255, 0.2);
}

button {
  padding: 12px 24px;
  font-size: 18px;
  border: none;
  border-radius: 8px;
  background-color: #007bff;
  color: #ffffff;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

button:hover {
  background-color: #0056b3;
}

/* Dark Mode Styles */
.dark-mode {
  background-color: #121212;
  color: #ffffff;
}

.dark-mode form {
  background-color: #1f1f1f;
  box-shadow: 0 4px 8px rgba(255, 255, 255, 0.1);
}

.dark-mode input {
  background-color: #333333;
  color: #ffffff;
  border-color: #444;
}

.dark-mode input:focus {
  border-color: #66ccff;
  box-shadow: 0 0 8px rgba(102, 204, 255, 0.5);
}

.dark-mode button {
  background-color: #66ccff;
}

.dark-mode button:hover {
  background-color: #3399cc;
}

/* Table Styles */
table {
  width: 100%;
  margin: 20px 0;
  border-collapse: collapse;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

th, td {
  padding: 15px;
  border: 1px solid #ddd;
  text-align: left;
}

th {
  background-color: #f4f4f4;
  color: #333;
  font-weight: bold;
}

.dark-mode th {
  background-color: #333;
  color: #ffffff;
}

/* Animation for Button Clicks */
button:active {
  transform: scale(0.98);
}

/* Responsive Design */
@media (max-width: 600px) {
  .App {
    padding: 15px;
  }

  form {
    padding: 20px;
  }

  input, button {
    font-size: 16px;
  }
}

        <button type="submit" className="btn btn-success btn-block">
          Add User
        </button>
      </form>
    </div>
  );
};

export default AddUser;
