# Card-Based User Management System

## 📋 **Project Overview**

This project is a **Card-Based User Management System** built using **React.js**. It allows users to:

- Add new users via a form.
- Display users as interactive cards.
- View detailed user information on a separate page.
- Update or delete user information from the details page.
- Toggle between Light and Dark modes.

The application is fully responsive and designed to provide a modern and clean user interface.

---

## 🖥️ **Project Structure**

- **App.js**: The main component that manages routing and user state.
- **UserCard.js**: Displays the list of users as cards and includes a form to add new users.
- **UserDetails.js**: Shows detailed information of a selected user with options to update or delete.
- **UpdateUser.js**: Provides a form to modify user details.
- **App.css**: Contains all the styles for the project, including card designs, form styles, and dark mode support.

---

## 🔧 **Features**

1. **Card-Based User List**: Users are displayed as interactive cards. Clicking on a card redirects to the details page.
2. **Add User Form**: A form to dynamically add users to the list.
3. **Details Page**: Displays full user information and provides options to update or delete the user.
4. **Update Page**: A separate page to modify existing user details.
5. **Dark Mode**: A toggle button to switch between light and dark themes.
6. **Responsive Design**: Works smoothly on both desktop and mobile devices.

---

## 📝 **Component Breakdown**

### 1. **App.js**

- Manages the overall application state and routing.
- Uses React Router for navigation between different pages.
- Includes the Dark Mode toggle function.

### 2. **UserCard.js**

- Displays the list of users as interactive cards.
- Contains a form to add new users.
- Cards show only the user’s name.
- Clicking a card redirects to the UserDetails page.

### 3. **UserDetails.js**

- Displays detailed information about a selected user (name, email, and phone).
- Provides buttons to update or delete the user.
- Delete button removes the user from the list.

### 4. **UpdateUser.js**

- Provides a form to update user information.
- After submission, the updated information is saved and displayed.

---

## 🎨 **Design Elements**

### **Form Design**

- Clean and modern input fields.
- Hover and focus effects on inputs.
- Styled buttons for form submission.

### **Card Design**

- Minimal and modern cards to display user names.
- Hover effect to lift the card and enhance interactivity.

### **Dark Mode**

- Background and text colors change dynamically.
- Form, cards, and buttons adjust to dark mode.

---

## 🔄 **Dark Mode Toggle**

- The application includes a Dark Mode feature that can be toggled with a button.
- It switches the background and text colors for better readability in different lighting conditions.

---

## 🚀 **How to Run the Project**

1. Clone the repository.
2. Navigate to the project folder.
3. Run the following commands:
   ```bash
   npm install
   npm start
   ```
4. Open your browser and go to `http://localhost:3000`.

---

## ✅ **Form Validations**

- The form checks if all fields (Name, Email, Phone) are filled before submission.
- If any field is empty, it alerts the user to complete the form.

---

## 📱 **Responsive Design**

- The project is fully responsive and adjusts to different screen sizes.
- The layout works smoothly on both desktop and mobile devices.

---

## 🎉 **Conclusion**

This Card-Based User Management System is a practical project that demonstrates the use of React.js to build a dynamic and interactive web application. It covers essential CRUD operations, modern UI design, and responsive layouts. By implementing this project, you can gain a better understanding of React components, state management, routing, and styling.

