-----------------------------------EyeAnimation.jsx---------------------------------

import React, { useEffect, useState } from 'react';
import './EyeAnimation.css';
import { gsap } from 'gsap';

const EyeAnimation = ({ password }) => {
  const [eyeState, setEyeState] = useState('idle');

  useEffect(() => {
    const pupil = document.querySelectorAll('.btn-pupil');
    const lid = document.querySelectorAll('.btn-lid');

    if (password.length > 0) {
      setEyeState('wide');
      gsap.to(pupil, { scale: 1.2, duration: 0.3 });
    } else {
      setEyeState('idle');
      gsap.to(pupil, { scale: 1, duration: 0.3 });
    }

    const invalidInput = password.includes(' ') || password.length < 4;
    if (invalidInput) {
      setEyeState('alert');
      gsap.fromTo(lid, { scaleY: 1 }, { scaleY: 0.1, duration: 0.2, yoyo: true, repeat: 1 });
    }
  }, [password]);

  return (
    <div className="eye-wrapper">
      {[...Array(2)].map((_, index) => (
        <div key={index} className="btn-button">
          <div className={`btn-lid ${eyeState}`}></div>
          <div className={`btn-pupil ${eyeState}`}></div>
        </div>
      ))}
    </div>
  );
};

export default EyeAnimation;


--------------------------------------_------EyeAnimation.css---------------------------------------------


.eye-wrapper {
  display: flex;
  justify-content: center;
  margin-bottom: 2rem;
}

.btn-button {
  background: #fff;
  border: 3px solid #fff;
  border-radius: 50%;
  height: 5rem;
  width: 5rem;
  position: relative;
  margin: 0 1rem;
  display: flex;
  align-items: center;
  justify-content: center;
}

.btn-lid {
  background: transparent;
  border-radius: 50%;
  height: 100%;
  position: absolute;
  width: 100%;
}

.btn-pupil {
  background: #000;
  border-radius: 50%;
  height: 1.5rem;
  width: 1.5rem;
  transition: transform 0.3s ease-in-out;
}

.btn-lid.wide {
  background: transparent;
}

.btn-pupil.wide {
  transform: scale(1.2);
}

.btn-lid.alert {
  background: rgba(255, 0, 0, 0.5);
  animation: blink 0.3s ease-in-out;
}

.btn-pupil.alert {
  transform: scale(1.4);
}

@keyframes blink {
  0%, 100% {
    height: 100%;
  }
  50% {
    height: 0%;
  }
}


----------------------------------------Login.jsx


import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { useAuth } from '../context/AuthContext';
import './Login.css';
import EyeAnimation from './EyeAnimation';

const Login = () => {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [isRegistering, setIsRegistering] = useState(false);
  const { login, register } = useAuth();
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();
    if (isRegistering) {
      if (register(username, password)) {
        alert('Registration successful!');
        setIsRegistering(false);
      } else {
        alert('Username already exists!');
      }
    } else {
      if (login(username, password)) {
        navigate('/');
      } else {
        alert('Invalid credentials!');
      }
    }
    setUsername('');
    setPassword('');
  };

  return (
    <div className="login-container">
      <EyeAnimation password={password} />
      <h2>{isRegistering ? 'Register' : 'Login'}</h2>
      <form onSubmit={handleSubmit}>
        <input
          type="text"
          placeholder="Username"
          value={username}
          onChange={(e) => setUsername(e.target.value)}
        />
        <input
          type="password"
          placeholder="Password"
          value={password}
          onChange={(e) => setPassword(e.target.value)}
        />
        <button type="submit">{isRegistering ? 'Register' : 'Login'}</button>
      </form>
      <p>
        {isRegistering ? 'Already have an account?' : ''}{' '}
        <button onClick={() => setIsRegistering(!isRegistering)}>
          {isRegistering ? 'Login' : 'Register'}
        </button>
      </p>
    </div>
  );
};

export default Login;
