login. css

/* Main container styling */
.login-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 100vh;
  background-color: #000; /* Pure black background for modern look */
  color: #f0f0f0; /* Light text for contrast */
  position: relative;
}

/* Title styling */
.login-container h2 {
  margin-bottom: 20px;
  font-size: 2.2rem;
  font-weight: 600;
  color: #ffffff;
  text-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2);
}

/* Form container with elevation */
.login-container form {
  display: flex;
  flex-direction: column;
  gap: 15px;
  width: 320px;
  padding: 30px;
  background-color: #121212; /* Darker form background for elevation */
  border-radius: 12px;
  box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.5); /* Modern elevation effect */
  position: relative;
}

/* Input field styling */
.login-container input {
  padding: 12px;
  font-size: 1rem;
  border: none;
  border-radius: 8px;
  background-color: #1a1a1a;
  color: #f0f0f0;
  outline: none;
  box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.2);
}

.login-container input::placeholder {
  color: #aaa; /* Placeholder text color */
}

/* Button styling with corner design */
.login-container button {
  padding: 12px;
  font-size: 1rem;
  font-weight: bold;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 50px; /* Corner styling */
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0px 4px 12px rgba(0, 123, 255, 0.4);
}

.login-container button:hover {
  background-color: #0056b3;
  box-shadow: 0px 6px 14px rgba(0, 86, 179, 0.6);
}

/* For small screens */
@media (max-width: 480px) {
  .login-container form {
    width: 90%;
  }
}


-------app. css
/* General Styles */
body {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
  background: none;
  color: #f8f9fa; /* Light color for better readability */
  overflow: hidden; /* Hide overflow for background video */
}

.video-background {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  object-fit: cover;
  z-index: -1; /* Place the video behind content */
}

.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

header {
  text-align: center;
  margin-bottom: 20px;
}

header h1 {
  font-size: 3rem;
  text-shadow: 2px 2px 10px rgba(0, 0, 0, 0.7); /* Text shadow for clarity */
  color: #f8f9fa; /* Lighter color for better contrast */
}

/* Navigation Bar */
.navbar {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.7);
  padding: 10px 20px;
  border-radius: 25px;
  margin: 20px auto;
  max-width: 600px;
}

.navbar .nav-item {
  padding: 10px 20px;
  border-radius: 20px;
  color: #f8f9fa; /* Brighter text color */
  font-weight: bold;
  text-align: center;
  cursor: pointer;
  transition: background-color 0.3s ease, color 0.3s ease;
}

.navbar .nav-item:hover {
  background-color: #007bff;
  color: #fff;
}

.navbar .nav-item.active {
  background-color: #6c757d;
  color: #fff;
}

/* Input Fields and Buttons */
input, button {
  font-size: 1rem;
  padding: 10px;
  border: none;
  border-radius: 50px; /* Corner styling */
  margin: 10px 0;
  width: 100%;
  max-width: 400px;
}

input {
  background-color: rgba(255, 255, 255, 0.9); /* Slightly transparent white */
  color: #000; /* Dark text for input fields */
}

button {
  background-color: #007bff;
  color: #fff;
  font-weight: bold;
  transition: all 0.3s ease;
}

button:hover {
  background-color: #0056b3;
  transform: translateY(-3px);
}

/* Utility classes */
.text-primary {
  color: #007bff;
}

.vh-100 {
  height: 100vh;
}

.d-flex {
  display: flex;
}

.justify-content-center {
  justify-content: center;
}

.align-items-center {
  align-items: center;
}

/* Prevent Text Overflow */
input, button {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

/* Adjust Form Container */
.form-container {
  background-color: rgba(0, 0, 0, 0.8); /* Semi-transparent black for form background */
  padding: 20px;
  border-radius: 10px;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); /* Subtle shadow for depth */
}

h1, h2 {
  color: #f8f9fa; /* Light text color */
  text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.8); /* Subtle shadow for better visibility */
}


-----app. jsx
import React from "react";
import "./App.css";

const App = () => {
  return (
    <div className="app-container">
      {/* Background video */}
      <video className="video-background" autoPlay muted loop>
        <source src="/path-to-your-video.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>

      {/* Content */}
      <div className="form-container">
        <h2>Login</h2>
        <form>
          <input type="text" placeholder="Username" />
          <input type="password" placeholder="Password" />
          <button type="submit">Login</button>
        </form>
      </div>
    </div>
  );
};

export default App;


-------------------------------app,jsx-------

// Updated App.jsx
import React, { useState } from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate, Link } from 'react-router-dom';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import 'bootstrap/dist/css/bootstrap.min.css';
import UserCard from './components/UserCard';
import UserDetails from './components/UserDetails';
import UpdateUser from './components/UpdateUser';
import Login from './components/Login';
import './App.css';
import AddUser from './components/AddUser';
import Dashboard from "./components/Dashboard";
import { AuthProvider, useAuth } from './context/AuthContext';

function PrivateRoute({ children }) {
  const { currentUser } = useAuth();
  return currentUser ? children : <Navigate to="/login" replace />;
}

function App() {
  const [users, setUsers] = useState([]);

  const addUser = (user) => {
    setUsers([...users, { ...user, id: users.length + 1 }]);
    toast.success('User added successfully!');
  };

  return (
    <AuthProvider>
      <Router>
        <div className="container d-flex flex-column justify-content-center align-items-center vh-100">
          {/* Header */}
          <header className="text-center mb-4">
            <h1 className="text-primary display-4">User Management System</h1>
          </header>

          {/* Background video */}
      <video className="video-background" autoPlay muted loop>
        <source src="bgg.mp4" type="video/mp4" />
        Your browser does not support the video tag.
      </video>

          {/* Navigation Bar */}
          <Navbar />

          {/* Main Content */}
          <main className="w-100">
            <Routes>
              <Route path="/login" element={<Login />} />
              <Route
                path="/"
                element={
                  <PrivateRoute>
                  <UserCard users={users} />
                  </PrivateRoute>
                }
              />
              <Route
                path="/user/:id"
                element={
                  <PrivateRoute>
                  <UserDetails users={users} setUsers={setUsers} />
                  </PrivateRoute>
                }
              />
              <Route
                path="/update/:id"
                element={
                  <PrivateRoute>
                  <UpdateUser users={users} setUsers={setUsers} />
                  </PrivateRoute>
                }
              />
              <Route
                path="/add-user"
                element={
                  <PrivateRoute>
                 <AddUser addUser={addUser} />
                 </PrivateRoute>
                }
              />
              <Route
                path="/dashboard"
                element={
                  <PrivateRoute>
                  <Dashboard totalUsers={users.length} />
                  </PrivateRoute>
                }
              />
            </Routes>
          </main>

          {/* Toast Notifications */}
          <ToastContainer />
        </div>
      </Router>
    </AuthProvider>
  );
}

const Navbar = () => {
  const { currentUser, logout } = useAuth();
  return (
    <div className="navbar">
      <Link to="/" className="nav-item">
        Home
      </Link>
      <Link to="/add-user" className="nav-item">
        Add User
      </Link>
      <Link to="/dashboard" className="nav-item">
        Dashboard
      </Link>
      {currentUser ? (
        <Link to="/login" className="nav-item" onClick={logout}>
          Logout
        </Link>
      ) : (
        <Link to="/login" className="nav-item">
          Login
        </Link>
      )}
    </div>
  );
};

export default App;

