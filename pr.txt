App. Jss------
import React from 'react';
import { BrowserRouter as Router, Route, Routes } from 'react-router-dom';
import Home from './components/Home';
import CreateEmployee from './components/CreateEmployee';
import EmployeeDetails from './components/EmployeeDetails';

function App() {
  return (
    <Router>
      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/create" element={<CreateEmployee />} />
        <Route path="/employee/:id" element={<EmployeeDetails />} />
      </Routes>
    </Router>
  );
}

export default App;


------ home. Js


import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import EmployeeCard from './EmployeeCard';

const Home = () => {
  const [employees, setEmployees] = useState([]);

  useEffect(() => {
    const storedEmployees = JSON.parse(localStorage.getItem('employees')) || [];
    setEmployees(storedEmployees);
  }, []);

  return (
    <div>
      <h1>Employee Management</h1>
      <Link to="/create">
        <button>Create Employee</button>
      </Link>
      <div>
        {employees.map((employee) => (
          <EmployeeCard key={employee.id} employee={employee} />
        ))}
      </div>
    </div>
  );
};

export default Home;


------ 'create emp. Js

import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const CreateEmployee = () => {
  const [employee, setEmployee] = useState({ name: '', email: '', phone: '' });
  const navigate = useNavigate();

  const handleChange = (e) => {
    setEmployee({ ...employee, [e.target.name]: e.target.value });
  };

  const handleSubmit = () => {
    const employees = JSON.parse(localStorage.getItem('employees')) || [];
    employees.push({ ...employee, id: Date.now() });
    localStorage.setItem('employees', JSON.stringify(employees));
    navigate('/');
  };

  return (
    <div>
      <h2>Create Employee</h2>
      <form onSubmit={(e) => e.preventDefault()}>
        <input name="name" placeholder="Name" onChange={handleChange} />
        <input name="email" placeholder="Email" onChange={handleChange} />
        <input name="phone" placeholder="Phone" onChange={handleChange} />
        <button onClick={handleSubmit}>Save</button>
      </form>
    </div>
  );
};

export default CreateEmployee;


------emp. Card


import React from 'react';
import { Link } from 'react-router-dom';

const EmployeeCard = ({ employee }) => {
  const handleDelete = () => {
    const employees = JSON.parse(localStorage.getItem('employees')) || [];
    const updatedEmployees = employees.filter((emp) => emp.id !== employee.id);
    localStorage.setItem('employees', JSON.stringify(updatedEmployees));
    window.location.reload();
  };

  return (
    <div>
      <h3>{employee.name}</h3>
      <Link to={`/employee/${employee.id}`}>View Details</Link>
      <button onClick={handleDelete}>Delete</button>
    </div>
  );
};

export default EmployeeCard;

---------emp details. Js


import React, { useEffect, useState } from 'react';
import { useParams } from 'react-router-dom';

const EmployeeDetails = () => {
  const { id } = useParams();
  const [employee, setEmployee] = useState(null);

  useEffect(() => {
    const employees = JSON.parse(localStorage.getItem('employees')) || [];
    const emp = employees.find((emp) => emp.id === parseInt(id));
    setEmployee(emp);
  }, [id]);

  if (!employee) {
    return <p>Employee not found</p>;
  }

  return (
    <div>
      <h2>Employee Details</h2>
      <p>Name: {employee.name}</p>
      <p>Email: {employee.email}</p>
      <p>Phone: {employee.phone}</p>
    </div>
  );
};

export default EmployeeDetails;

---index. Js

import React from 'react';
import ReactDOM from 'react-dom';
import App from './App';

ReactDOM.render(<App />, document.getElementById('root'));



-----app. css


/* Global Styles */
body {
  font-family: 'Arial', sans-serif;
  background-color: #f9f9f9;
  margin: 0;
  padding: 0;
}

h1, h2, h3 {
  color: #333;
  text-align: center;
}

button {
  background-color: #007bff;
  color: white;
  border: none;
  padding: 10px 20px;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  margin-top: 10px;
}

button:hover {
  background-color: #0056b3;
}

a {
  text-decoration: none;
  color: white;
}

/* Home Page Styles */
.home-container {
  max-width: 1200px;
  margin: 20px auto;
  padding: 20px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.create-button {
  display: flex;
  justify-content: center;
  margin-bottom: 20px;
}

/* Employee Card Styles */
.employee-card {
  background-color: #fff;
  border: 1px solid #ddd;
  border-radius: 8px;
  margin: 10px;
  padding: 20px;
  width: calc(33.33% - 20px);
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  text-align: center;
  transition: transform 0.3s;
}

.employee-card:hover {
  transform: scale(1.05);
}

.card-actions {
  margin-top: 10px;
}

.card-actions a {
  margin-right: 10px;
}

/* Employee Details Page */
.details-container {
  max-width: 800px;
  margin: 40px auto;
  padding: 20px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

.details-container p {
  font-size: 18px;
  color: #555;
}

/* Form Styles */
.form-container {
  max-width: 600px;
  margin: 40px auto;
  padding: 20px;
  background-color: white;
  border-radius: 10px;
  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

form input {
  width: 100%;
  padding: 10px;
  margin: 10px 0;
  border: 1px solid #ddd;
  border-radius: 5px;
}

form button {
  width: 100%;
  margin-top: 20px;
}

/* Responsive Design */
@media (max-width: 768px) {
  .employee-card {
    width: calc(50% - 20px);
  }
}

@media (max-width: 480px) {
  .employee-card {
    width: 100%;
  }

  button {
    width: 100%;
  }
}



hujjjjjjjj

/* Global Styles */
body {
  font-family: 'Arial', sans-serif;
  background-color: #f3f4f6;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

h1, h2, h3 {
  color: #2c3e50;
  text-align: center;
  margin-bottom: 20px;
}

button {
  background-color: #4caf50;
  color: white;
  border: none;
  padding: 12px 20px;
  border-radius: 25px;
  cursor: pointer;
  font-size: 16px;
  width: 100%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: background-color 0.3s ease, transform 0.2s ease;
}

button:hover {
  background-color: #388e3c;
  transform: translateY(-3px);
}

a {
  text-decoration: none;
  color: #fff;
}

/* Centering the Website */
.container {
  max-width: 1000px;
  margin: 0 auto;
  padding: 20px;
  background-color: white;
  border-radius: 15px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
  text-align: center;
}

/* Employee Card Styles */
.employee-card {
  background-color: #ffffff;
  border: 1px solid #e0e0e0;
  border-radius: 12px;
  margin: 15px;
  padding: 20px;
  width: calc(33.33% - 30px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);
  text-align: center;
  transition: all 0.3s ease;
}

.employee-card:hover {
  transform: scale(1.1);
  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
}

.card-actions {
  margin-top: 15px;
}

.card-actions a {
  margin-right: 10px;
  font-weight: bold;
  color: #4caf50;
}

/* Form Styles */
.form-container {
  max-width: 500px;
  margin: 20px auto;
  padding: 25px;
  background-color: #ffffff;
  border-radius: 15px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}

form input {
  width: 100%;
  padding: 12px;
  margin: 12px 0;
  border: 1px solid #e0e0e0;
  border-radius: 8px;
}

form button {
  width: 100%;
  margin-top: 15px;
}

/* Responsive Design */
@media (max-width: 768px) {
  .employee-card {
    width: calc(50% - 20px);
  }

  .form-container {
    max-width: 100%;
  }
}

@media (max-width: 480px) {
  .employee-card {
    width: 100%;
  }

  form input {
    padding: 10px;
  }
}
