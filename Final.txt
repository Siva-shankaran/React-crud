// Updated App.jsx
import React, { useState } from 'react';
import { BrowserRouter as Router, Route, Routes, Navigate, Link } from 'react-router-dom';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
import 'bootstrap/dist/css/bootstrap.min.css';
import UserCard from './components/UserCard';
import UserDetails from './components/UserDetails';
import UpdateUser from './components/UpdateUser';
import Login from './components/Login';
import './App.css';
import AddUser from './components/AddUser';
import Dashboard from "./components/Dashboard";
import { AuthProvider } from './components/AuthContext';
import PrivateRoute from '.components/PrivateRoute';



function App() {
  const [users, setUsers] = useState([]);
 

  const addUser = (user) => {
    setUsers([...users, { ...user, id: users.length + 1 }]);
    toast.success('User added successfully!');
  };

  const handleLogout = () => {
    setCurrentUser(null);
    navigate('/login'); // Redirect to login after logout
  };

  return (
    <AuthProvider>
    <Router>
      <div className="container d-flex flex-column justify-content-center align-items-center vh-100">
        {/* Header */}
        <header className="text-center mb-4">
          <h1 className="text-primary display-4">User Management System</h1>
        </header>

        {/* Navigation Bar */}
        <div className="navbar">
          <Link to="/" className="nav-item">
            Home
          </Link>
          <Link to="/add-user" className="nav-item">
            Add User
          </Link>
          <Link to="/dashboard" className="nav-item">
            Dashboard
          </Link>
          
          <Link to="/login" className="nav-item" onClick={handleLogout}>
  Logout
</Link>

        </div>

        {/* Main Content */}
        <main className="w-100">
          <Routes>
            <Route
              path="/login"
              element={
                <Login/>
              }
            />
            <Route
              path="/"
              element={
                <PrivateRoute>
                  <UserCard users={users} />
                </PrivateRoute>
              }
            />
            <Route
              path="/user/:id"
              element={
                <PrivateRoute>
                  <UserDetails users={users} setUsers={setUsers} />
                </PrivateRoute>
              }
            />
            <Route
              path="/update/:id"
              element={
                <PrivateRoute >
                  <UpdateUser users={users} setUsers={setUsers} />
                </PrivateRoute>
              }
            />
            {/* Placeholder routes for Add User, Dashboard, and Logout */}
            <Route
              path="/add-user"
              element={
                <PrivateRoute >
                 <AddUser addUser={addUser} />
                </PrivateRoute>
              }
            />
            <Route
              path="/dashboard"
              element={
                <PrivateRoute >
                  <Dashboard totalUsers={users.length} />
                </PrivateRoute>
              }
            />
          </Routes>
        </main>

        {/* Toast Notifications */}
        <ToastContainer />
      </div>
    </Router>
    </AuthProvider>

  );
}

export default App;

